
==================== FINAL INTERFACE ====================
2019-02-28 10:18:02.027746757 UTC

interface main:Main [family instance module] 8063
  interface hash: f554c655da2d9a808a817371596ec58f
  ABI hash: 948bfb8a9fe0d4cfa65d15cd9c363284
  export-list hash: 020661c381e8983e05820be4d5047bd1
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: a6613df7e397204c0759d952d9cb0425
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: aeson-1.4.2.0 aeson-pretty-0.8.7
                      array-0.5.3.0 asn1-encoding-0.9.5 asn1-parse-0.9.4 asn1-types-0.3.2
                      async-2.2.1 attoparsec-0.13.2.2 base-4.12.0.0 base-compat-0.10.5
                      basement-0.0.10 binary-0.8.6.0 blaze-builder-0.4.1.0
                      blaze-html-0.9.1.1 blaze-markup-0.8.2.2 bytestring-0.10.8.2
                      case-insensitive-1.2.0.11 cereal-0.5.8.0 conduit-1.3.1
                      conduit-extra-1.3.1 connection-0.2.8 containers-0.6.0.1
                      cookie-0.4.4 cryptonite-0.25 data-default-class-0.1.2.0
                      deepseq-1.4.4.0 directory-1.3.3.0 dlist-0.8.0.5 exceptions-0.10.0
                      filepath-1.4.2.1 ghc-boot-th-8.6.3 ghc-prim-0.5.3 hashable-1.2.7.0
                      hourglass-0.2.12 html-conduit-1.3.2 http-client-0.5.14
                      http-client-tls-0.3.5.3 http-conduit-2.3.5 http-types-0.12.2
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.2.2 memory-0.14.18
                      mono-traversable-1.0.11.0 mtl-2.2.2 network-2.8.0.0
                      network-uri-2.6.1.0 parsec-3.1.13.0 pem-0.2.4 primitive-0.6.4.0
                      random-1.1 resourcet-1.2.2 scientific-0.3.6.2 socks-0.5.6
                      split-0.2.3.3 stm-2.5.0.0 streaming-commons-0.2.1.0 tagged-0.8.6
                      template-haskell-2.14.0.0 text-1.2.3.1 time-1.8.0.2
                      time-locale-compat-0.1.1.5 tls-1.4.1 transformers-0.5.5.0
                      unix-2.7.2.2 unliftio-core-0.1.2.0 unordered-containers-0.2.9.0
                      uuid-types-1.0.3 vector-0.12.0.2 vector-algorithms-0.8.0.1
                      x509-1.7.5 x509-store-1.6.7 x509-system-1.6.6
                      x509-validation-1.6.11 xml-conduit-1.8.0.1 xml-types-0.3.6
                      zlib-0.6.2
orphans: http-client-0.5.14:Network.HTTP.Client.Request
         network-2.8.0.0:Network.Socket basement-0.0.10:Basement.UArray.Base
         basement-0.0.10:Basement.Block
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         hashable-1.2.7.0:Data.Hashable.Generic
         vector-0.12.0.2:Data.Vector.Unboxed
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         stm-2.5.0.0:Control.Monad.STM
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.1:Data.Text.Lazy text-1.2.3.1:Data.Text
         binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: aeson-1.4.2.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         basement-0.0.10:Basement.Block.Base
                         basement-0.0.10:Basement.Bounded basement-0.0.10:Basement.Monad
                         basement-0.0.10:Basement.MutableBuilder
                         basement-0.0.10:Basement.Nat basement-0.0.10:Basement.NonEmpty
                         basement-0.0.10:Basement.Numerical.Subtractive
                         basement-0.0.10:Basement.PrimType basement-0.0.10:Basement.String
                         basement-0.0.10:Basement.String.Encoding.ASCII7
                         basement-0.0.10:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.10:Basement.String.Encoding.UTF16
                         basement-0.0.10:Basement.String.Encoding.UTF32
                         basement-0.0.10:Basement.Types.OffsetSize
                         basement-0.0.10:Basement.UArray.Base
                         basement-0.0.10:Basement.UTF8.Base
                         conduit-1.3.1:Data.Conduit.Internal.Conduit
                         conduit-1.3.1:Data.Conduit.Internal.Pipe
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         cryptonite-0.25:Crypto.ECC cryptonite-0.25:Crypto.Error.Types
                         cryptonite-0.25:Crypto.Hash.Blake2
                         cryptonite-0.25:Crypto.Hash.Blake2b
                         cryptonite-0.25:Crypto.Hash.Blake2bp
                         cryptonite-0.25:Crypto.Hash.Blake2s
                         cryptonite-0.25:Crypto.Hash.Blake2sp
                         cryptonite-0.25:Crypto.Hash.Keccak cryptonite-0.25:Crypto.Hash.MD2
                         cryptonite-0.25:Crypto.Hash.MD4 cryptonite-0.25:Crypto.Hash.MD5
                         cryptonite-0.25:Crypto.Hash.RIPEMD160
                         cryptonite-0.25:Crypto.Hash.SHA1 cryptonite-0.25:Crypto.Hash.SHA224
                         cryptonite-0.25:Crypto.Hash.SHA256 cryptonite-0.25:Crypto.Hash.SHA3
                         cryptonite-0.25:Crypto.Hash.SHA384
                         cryptonite-0.25:Crypto.Hash.SHA512
                         cryptonite-0.25:Crypto.Hash.SHA512t
                         cryptonite-0.25:Crypto.Hash.SHAKE
                         cryptonite-0.25:Crypto.Hash.Skein256
                         cryptonite-0.25:Crypto.Hash.Skein512
                         cryptonite-0.25:Crypto.Hash.Tiger
                         cryptonite-0.25:Crypto.Hash.Whirlpool dlist-0.8.0.5:Data.DList
                         ghc-boot-th-8.6.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.3:GHC.LanguageExtensions.Type
                         http-client-0.5.14:Network.HTTP.Client
                         mono-traversable-1.0.11.0:Data.MonoTraversable
                         mono-traversable-1.0.11.0:Data.NonNull
                         mono-traversable-1.0.11.0:Data.Sequences
                         network-uri-2.6.1.0:Network.URI
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
                         xml-types-0.3.6:Data.XML.Types
                         zlib-0.6.2:Codec.Compression.Zlib.Stream
import  -/  aeson-1.4.2.0:Data.Aeson bfba563baa214951132bfa3fc3e1a304
import  -/  aeson-1.4.2.0:Data.Aeson.Types.ToJSON d4b5a4d5322cef2155ea56a0b9db079b
import  -/  aeson-pretty-0.8.7:Data.Aeson.Encode.Pretty 0816d9f1da435d03b4d4bfbb1a596bc5
import  -/  base-4.12.0.0:Control.Monad 7bd27be8172a0ce3a579caee3ae14f88
import  -/  base-4.12.0.0:Data.Either 946a3435d06773e1dbcad1ba5dc18a2c
import  -/  base-4.12.0.0:Data.Foldable 00188ddf89c975fee76bdfad479443c1
import  -/  base-4.12.0.0:Data.Functor 22aac80fdb6c7b7f60b4aaab86afee64
import  -/  base-4.12.0.0:Data.List ce2c69da408fdc014383cede9e1f9adf
import  -/  base-4.12.0.0:Data.OldList c2cab40fed7d27b5e717779f9a3c09ea
import  -/  base-4.12.0.0:GHC.Base cc906f98291a1b830546e99a96674547
import  -/  base-4.12.0.0:GHC.Generics 7aea30cad019e3a5fc11eb21c8019cc5
import  -/  base-4.12.0.0:GHC.List 734a72beb76d276fb4a0ba2689a5711f
import  -/  base-4.12.0.0:GHC.Show 4e438f26d903388cc6c2c5d64ed01b98
import  -/  base-4.12.0.0:Prelude 5c01365ec01f83bd405ac01cbb9a8d76
import  -/  base-4.12.0.0:System.Environment 2204870ad586be67c274aa49ce9ae53a
import  -/  blaze-html-0.9.1.1:Text.Blaze.Html 134c7b47577e74a9150bff2f3104d64d
import  -/  blaze-html-0.9.1.1:Text.Blaze.Html.Renderer.Text c5665041c1da253730d7fb91c3fd6520
import  -/  containers-0.6.0.1:Data.Map.Internal 7258cbfb7d1b897678a42b6739fc4dac
import  -/  containers-0.6.0.1:Data.Map.Strict c9c15d36149113668379264c6ca4bcc8
import  -/  ghc-prim-0.5.3:GHC.Classes e0d9c979f6368701f34fa421754d2cce
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  html-conduit-1.3.2:Text.HTML.DOM 0a2f02ee7812f2903438efdff8547fd5
import  -/  http-client-0.5.14:Network.HTTP.Client.Request 260b441a676a683be9f1c4b9e30de65a
import  -/  http-conduit-2.3.5:Network.HTTP.Simple 07e7171cf0eee38d0d48c9433b33f476
import  -/  text-1.2.3.1:Data.Text 78eb69b898aafd3383227a8f8c115df8
import  -/  text-1.2.3.1:Data.Text.IO 0f79d4c25fc832111c66948374be85e1
import  -/  text-1.2.3.1:Data.Text.Internal f35f3ca76dd689967d20c61a04b86010
import  -/  text-1.2.3.1:Data.Text.Lazy c4674a9fd991829c30b783bea41e0a11
import  -/  text-1.2.3.1:Data.Text.Lazy.Encoding a9450b65f296c742d0ca4ec3b56b6882
import  -/  text-1.2.3.1:Data.Text.Read 06de758f29d3a8b3788bfb8e6d41a5a2
import  -/  xml-conduit-1.8.0.1:Text.XML 8949e8c9c8c1ca5f8c1bcbcb281e1794
import  -/  xml-conduit-1.8.0.1:Text.XML.Cursor 327322324ddfcd161b21bf6af681b777
import  -/  xml-conduit-1.8.0.1:Text.XML.Cursor.Generic d07e8dbf04aa6b5f1db56ab3b7277126
b52c6098c45a6ade437a5258d79a2a98
  $fGenericExposition :: GHC.Generics.Generic Main.Exposition
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Exposition
                  Main.$fGenericExposition1
                    `cast`
                  (forall (x1 :: <*>_N).
                   <Main.Exposition>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "Exposition" "Main" "main" 'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Exposition" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     ((GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Maybe.Just "title")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Maybe.Just "author")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R
                                                             Data.Text.Internal.Text))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Maybe.Just "date")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R Data.Text.Internal.Text)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Maybe.Just
                                                                                 "tools")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              [Main.Tool])))>_R) ; Sub (Sym (Main.Rep_Exposition[0]))) <x1>_N)
                  Main.$fGenericExposition_$cto -}
b52c6098c45a6ade437a5258d79a2a98
  $fGenericExposition1 ::
    Main.Exposition
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Exposition" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Maybe.Just "title")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "author")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "date")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Maybe.Just "tools")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R [Main.Tool])))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1 (x2 :: Main.Exposition) ->
                 case x2 of wild { Main.Exposition g5 g6 g7 g8 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "title")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Maybe.Just "author")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "date")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Maybe.Just "tools")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R [Main.Tool]))
                    @ x1
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Maybe.Just "title")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Maybe.Just "author")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                       @ x1
                       g5
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Data.Text.Internal.Text>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "title")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Data.Text.Internal.Text>_R) <x1>_N)
                       g6
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Data.Text.Internal.Text>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "author")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Data.Text.Internal.Text>_R) <x1>_N))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Maybe.Just "date")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Maybe.Just "tools")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R [Main.Tool]))
                       @ x1
                       g7
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Data.Text.Internal.Text>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "date")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Data.Text.Internal.Text>_R) <x1>_N)
                       g8
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <[Main.Tool]>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "tools")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R [Main.Tool]>_R) <x1>_N)))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "Exposition" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "title")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Maybe.Just "author")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Maybe.Just "date")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1
                                                   GHC.Generics.R Data.Text.Internal.Text)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Maybe.Just "tools")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    [Main.Tool]))>_R) <x1>_N) }) -}
b52c6098c45a6ade437a5258d79a2a98
  $fGenericExposition_$cto ::
    GHC.Generics.Rep Main.Exposition x -> Main.Exposition
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(U,U),1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1 (ds :: GHC.Generics.Rep Main.Exposition x1) ->
                 case ds
                        `cast`
                      ((Sub (Main.Rep_Exposition[0]) ; (GHC.Generics.N:M1[0]
                                                            <*>_N
                                                            <GHC.Generics.D>_P
                                                            <'GHC.Generics.MetaData
                                                               "Exposition"
                                                               "Main"
                                                               "main"
                                                               'GHC.Types.False>_P
                                                            <GHC.Generics.M1
                                                               GHC.Generics.C
                                                               ('GHC.Generics.MetaCons
                                                                  "Exposition"
                                                                  'GHC.Generics.PrefixI
                                                                  'GHC.Types.True)
                                                               ((GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Maybe.Just "title")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      Data.Text.Internal.Text)
                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Maybe.Just
                                                                                          "author")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       Data.Text.Internal.Text))
                                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                                    GHC.Generics.S
                                                                                    ('GHC.Generics.MetaSel
                                                                                       ('GHC.Maybe.Just
                                                                                          "date")
                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                       'GHC.Generics.DecidedLazy)
                                                                                    (GHC.Generics.K1
                                                                                       GHC.Generics.R
                                                                                       Data.Text.Internal.Text)
                                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                                     GHC.Generics.S
                                                                                                     ('GHC.Generics.MetaSel
                                                                                                        ('GHC.Maybe.Just
                                                                                                           "tools")
                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                     (GHC.Generics.K1
                                                                                                        GHC.Generics.R
                                                                                                        [Main.Tool])))>_R ; GHC.Generics.N:M1[0]
                                                                                                                                <*>_N
                                                                                                                                <GHC.Generics.C>_P
                                                                                                                                <'GHC.Generics.MetaCons
                                                                                                                                   "Exposition"
                                                                                                                                   'GHC.Generics.PrefixI
                                                                                                                                   'GHC.Types.True>_P
                                                                                                                                <(GHC.Generics.M1
                                                                                                                                    GHC.Generics.S
                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                       ('GHC.Maybe.Just
                                                                                                                                          "title")
                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                    (GHC.Generics.K1
                                                                                                                                       GHC.Generics.R
                                                                                                                                       Data.Text.Internal.Text)
                                                                                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                     GHC.Generics.S
                                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                                        ('GHC.Maybe.Just
                                                                                                                                                           "author")
                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                                     (GHC.Generics.K1
                                                                                                                                                        GHC.Generics.R
                                                                                                                                                        Data.Text.Internal.Text))
                                                                                                                                 GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                     GHC.Generics.S
                                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                                        ('GHC.Maybe.Just
                                                                                                                                                           "date")
                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                                     (GHC.Generics.K1
                                                                                                                                                        GHC.Generics.R
                                                                                                                                                        Data.Text.Internal.Text)
                                                                                                                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                      GHC.Generics.S
                                                                                                                                                                      ('GHC.Generics.MetaSel
                                                                                                                                                                         ('GHC.Maybe.Just
                                                                                                                                                                            "tools")
                                                                                                                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                         'GHC.Generics.NoSourceStrictness
                                                                                                                                                                         'GHC.Generics.DecidedLazy)
                                                                                                                                                                      (GHC.Generics.K1
                                                                                                                                                                         GHC.Generics.R
                                                                                                                                                                         [Main.Tool]))>_R)) <x1>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds1 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 case ds2 of wild2 { GHC.Generics.:*: ds5 ds6 ->
                 Main.Exposition
                   ds3
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "title")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Data.Text.Internal.Text>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                   <*>_N
                                                                   <GHC.Generics.R>_P
                                                                   <Data.Text.Internal.Text>_R
                                                                   <x1>_P)
                   ds4
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "author")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Data.Text.Internal.Text>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                   <*>_N
                                                                   <GHC.Generics.R>_P
                                                                   <Data.Text.Internal.Text>_R
                                                                   <x1>_P)
                   ds5
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "date")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Data.Text.Internal.Text>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                   <*>_N
                                                                   <GHC.Generics.R>_P
                                                                   <Data.Text.Internal.Text>_R
                                                                   <x1>_P)
                   ds6
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "tools")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R [Main.Tool]>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                      <*>_N
                                                                      <GHC.Generics.R>_P
                                                                      <[Main.Tool]>_R
                                                                      <x1>_P) } } }) -}
561af1a136195d9bf53457cd6693d411
  $fGenericPosition :: GHC.Generics.Generic Main.Position
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Position
                  Main.$fGenericPosition1
                    `cast`
                  (forall (x1 :: <*>_N).
                   <Main.Position>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "Position" "Main" "main" 'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Position" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "left")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R (GHC.Maybe.Maybe GHC.Types.Int))
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Maybe.Just "top")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            (GHC.Maybe.Maybe
                                                               GHC.Types.Int)))>_R) ; Sub (Sym (Main.Rep_Position[0]))) <x1>_N)
                  Main.$fGenericPosition_$cto -}
561af1a136195d9bf53457cd6693d411
  $fGenericPosition1 ::
    Main.Position
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Position" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Maybe.Just "left")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R (GHC.Maybe.Maybe GHC.Types.Int))
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "top")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1 GHC.Generics.R (GHC.Maybe.Maybe GHC.Types.Int)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1 (x2 :: Main.Position) ->
                 case x2 of wild { Main.Position g5 g6 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "left")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R (GHC.Maybe.Maybe GHC.Types.Int)))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "top")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R (GHC.Maybe.Maybe GHC.Types.Int)))
                    @ x1
                    g5
                      `cast`
                    (Sym (GHC.Generics.N:K1[0]
                              <*>_N
                              <GHC.Generics.R>_P
                              <GHC.Maybe.Maybe GHC.Types.Int>_R
                              <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                 <*>_N
                                                 <GHC.Generics.S>_P
                                                 <'GHC.Generics.MetaSel
                                                    ('GHC.Maybe.Just "left")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy>_P
                                                 <GHC.Generics.K1
                                                    GHC.Generics.R
                                                    (GHC.Maybe.Maybe GHC.Types.Int)>_R) <x1>_N)
                    g6
                      `cast`
                    (Sym (GHC.Generics.N:K1[0]
                              <*>_N
                              <GHC.Generics.R>_P
                              <GHC.Maybe.Maybe GHC.Types.Int>_R
                              <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                 <*>_N
                                                 <GHC.Generics.S>_P
                                                 <'GHC.Generics.MetaSel
                                                    ('GHC.Maybe.Just "top")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy>_P
                                                 <GHC.Generics.K1
                                                    GHC.Generics.R
                                                    (GHC.Maybe.Maybe GHC.Types.Int)>_R) <x1>_N))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "Position" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "left")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R (GHC.Maybe.Maybe GHC.Types.Int))
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Maybe.Just "top")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  (GHC.Maybe.Maybe GHC.Types.Int))>_R) <x1>_N) }) -}
561af1a136195d9bf53457cd6693d411
  $fGenericPosition_$cto ::
    GHC.Generics.Rep Main.Position x -> Main.Position
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1 (ds :: GHC.Generics.Rep Main.Position x1) ->
                 case ds
                        `cast`
                      ((Sub (Main.Rep_Position[0]) ; (GHC.Generics.N:M1[0]
                                                          <*>_N
                                                          <GHC.Generics.D>_P
                                                          <'GHC.Generics.MetaData
                                                             "Position"
                                                             "Main"
                                                             "main"
                                                             'GHC.Types.False>_P
                                                          <GHC.Generics.M1
                                                             GHC.Generics.C
                                                             ('GHC.Generics.MetaCons
                                                                "Position"
                                                                'GHC.Generics.PrefixI
                                                                'GHC.Types.True)
                                                             (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Maybe.Just "left")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   (GHC.Maybe.Maybe GHC.Types.Int))
                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                 GHC.Generics.S
                                                                                 ('GHC.Generics.MetaSel
                                                                                    ('GHC.Maybe.Just
                                                                                       "top")
                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                    'GHC.Generics.DecidedLazy)
                                                                                 (GHC.Generics.K1
                                                                                    GHC.Generics.R
                                                                                    (GHC.Maybe.Maybe
                                                                                       GHC.Types.Int)))>_R ; GHC.Generics.N:M1[0]
                                                                                                                 <*>_N
                                                                                                                 <GHC.Generics.C>_P
                                                                                                                 <'GHC.Generics.MetaCons
                                                                                                                    "Position"
                                                                                                                    'GHC.Generics.PrefixI
                                                                                                                    'GHC.Types.True>_P
                                                                                                                 <GHC.Generics.M1
                                                                                                                    GHC.Generics.S
                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                       ('GHC.Maybe.Just
                                                                                                                          "left")
                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                    (GHC.Generics.K1
                                                                                                                       GHC.Generics.R
                                                                                                                       (GHC.Maybe.Maybe
                                                                                                                          GHC.Types.Int))
                                                                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                     GHC.Generics.S
                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                        ('GHC.Maybe.Just
                                                                                                                                           "top")
                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                     (GHC.Generics.K1
                                                                                                                                        GHC.Generics.R
                                                                                                                                        (GHC.Maybe.Maybe
                                                                                                                                           GHC.Types.Int))>_R)) <x1>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 Main.Position
                   ds1
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "left")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (GHC.Maybe.Maybe GHC.Types.Int)>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                           <*>_N
                                                                           <GHC.Generics.R>_P
                                                                           <GHC.Maybe.Maybe
                                                                              GHC.Types.Int>_R
                                                                           <x1>_P)
                   ds2
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "top")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (GHC.Maybe.Maybe GHC.Types.Int)>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                           <*>_N
                                                                           <GHC.Generics.R>_P
                                                                           <GHC.Maybe.Maybe
                                                                              GHC.Types.Int>_R
                                                                           <x1>_P) }) -}
8f46b23e3f0254dc8e7f73bf9e799411
  $fGenericSize :: GHC.Generics.Generic Main.Size
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Size
                  Main.$fGenericSize1
                    `cast`
                  (forall (x1 :: <*>_N).
                   <Main.Size>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData "Size" "Main" "main" 'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Size" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "width")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R (GHC.Maybe.Maybe GHC.Types.Int))
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Maybe.Just "height")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            (GHC.Maybe.Maybe
                                                               GHC.Types.Int)))>_R) ; Sub (Sym (Main.Rep_Size[0]))) <x1>_N)
                  Main.$fGenericSize_$cto -}
8f46b23e3f0254dc8e7f73bf9e799411
  $fGenericSize1 ::
    Main.Size
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Size" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Maybe.Just "width")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R (GHC.Maybe.Maybe GHC.Types.Int))
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "height")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1 GHC.Generics.R (GHC.Maybe.Maybe GHC.Types.Int)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1 (x2 :: Main.Size) ->
                 case x2 of wild { Main.Size g5 g6 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "width")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R (GHC.Maybe.Maybe GHC.Types.Int)))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "height")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R (GHC.Maybe.Maybe GHC.Types.Int)))
                    @ x1
                    g5
                      `cast`
                    (Sym (GHC.Generics.N:K1[0]
                              <*>_N
                              <GHC.Generics.R>_P
                              <GHC.Maybe.Maybe GHC.Types.Int>_R
                              <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                 <*>_N
                                                 <GHC.Generics.S>_P
                                                 <'GHC.Generics.MetaSel
                                                    ('GHC.Maybe.Just "width")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy>_P
                                                 <GHC.Generics.K1
                                                    GHC.Generics.R
                                                    (GHC.Maybe.Maybe GHC.Types.Int)>_R) <x1>_N)
                    g6
                      `cast`
                    (Sym (GHC.Generics.N:K1[0]
                              <*>_N
                              <GHC.Generics.R>_P
                              <GHC.Maybe.Maybe GHC.Types.Int>_R
                              <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                 <*>_N
                                                 <GHC.Generics.S>_P
                                                 <'GHC.Generics.MetaSel
                                                    ('GHC.Maybe.Just "height")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy>_P
                                                 <GHC.Generics.K1
                                                    GHC.Generics.R
                                                    (GHC.Maybe.Maybe GHC.Types.Int)>_R) <x1>_N))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "Size" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "width")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R (GHC.Maybe.Maybe GHC.Types.Int))
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Maybe.Just "height")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  (GHC.Maybe.Maybe GHC.Types.Int))>_R) <x1>_N) }) -}
8f46b23e3f0254dc8e7f73bf9e799411
  $fGenericSize_$cto :: GHC.Generics.Rep Main.Size x -> Main.Size
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1 (ds :: GHC.Generics.Rep Main.Size x1) ->
                 case ds
                        `cast`
                      ((Sub (Main.Rep_Size[0]) ; (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.D>_P
                                                      <'GHC.Generics.MetaData
                                                         "Size" "Main" "main" 'GHC.Types.False>_P
                                                      <GHC.Generics.M1
                                                         GHC.Generics.C
                                                         ('GHC.Generics.MetaCons
                                                            "Size"
                                                            'GHC.Generics.PrefixI
                                                            'GHC.Types.True)
                                                         (GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Maybe.Just "width")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               (GHC.Maybe.Maybe GHC.Types.Int))
                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                             GHC.Generics.S
                                                                             ('GHC.Generics.MetaSel
                                                                                ('GHC.Maybe.Just
                                                                                   "height")
                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                'GHC.Generics.NoSourceStrictness
                                                                                'GHC.Generics.DecidedLazy)
                                                                             (GHC.Generics.K1
                                                                                GHC.Generics.R
                                                                                (GHC.Maybe.Maybe
                                                                                   GHC.Types.Int)))>_R ; GHC.Generics.N:M1[0]
                                                                                                             <*>_N
                                                                                                             <GHC.Generics.C>_P
                                                                                                             <'GHC.Generics.MetaCons
                                                                                                                "Size"
                                                                                                                'GHC.Generics.PrefixI
                                                                                                                'GHC.Types.True>_P
                                                                                                             <GHC.Generics.M1
                                                                                                                GHC.Generics.S
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Maybe.Just
                                                                                                                      "width")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.K1
                                                                                                                   GHC.Generics.R
                                                                                                                   (GHC.Maybe.Maybe
                                                                                                                      GHC.Types.Int))
                                                                                                              GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                 GHC.Generics.S
                                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                                    ('GHC.Maybe.Just
                                                                                                                                       "height")
                                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                 (GHC.Generics.K1
                                                                                                                                    GHC.Generics.R
                                                                                                                                    (GHC.Maybe.Maybe
                                                                                                                                       GHC.Types.Int))>_R)) <x1>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 Main.Size
                   ds1
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "width")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (GHC.Maybe.Maybe GHC.Types.Int)>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                           <*>_N
                                                                           <GHC.Generics.R>_P
                                                                           <GHC.Maybe.Maybe
                                                                              GHC.Types.Int>_R
                                                                           <x1>_P)
                   ds2
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "height")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           (GHC.Maybe.Maybe GHC.Types.Int)>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                           <*>_N
                                                                           <GHC.Generics.R>_P
                                                                           <GHC.Maybe.Maybe
                                                                              GHC.Types.Int>_R
                                                                           <x1>_P) }) -}
561af1a136195d9bf53457cd6693d411
  $fGenericTool :: GHC.Generics.Generic Main.Tool
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Tool
                  Main.$fGenericTool1
                    `cast`
                  (forall (x1 :: <*>_N).
                   <Main.Tool>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData "Tool" "Main" "main" 'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Tool" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     ((GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Maybe.Just "id")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Maybe.Just "position")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R Main.Position))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Maybe.Just "size")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1 GHC.Generics.R Main.Size)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Maybe.Just
                                                                                 "content")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              Main.ToolContent)))>_R) ; Sub (Sym (Main.Rep_Tool[0]))) <x1>_N)
                  Main.$fGenericTool_$cto -}
561af1a136195d9bf53457cd6693d411
  $fGenericTool1 ::
    Main.Tool
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Tool" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Maybe.Just "id")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "position")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Main.Position))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "size")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R Main.Size)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Maybe.Just "content")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R Main.ToolContent)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1 (x2 :: Main.Tool) ->
                 case x2 of wild { Main.Tool g5 g6 g7 g8 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "id")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Maybe.Just "position")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R Main.Position))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "size")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R Main.Size)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Maybe.Just "content")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R Main.ToolContent))
                    @ x1
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Maybe.Just "id")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Maybe.Just "position")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Main.Position))
                       @ x1
                       g5
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Data.Text.Internal.Text>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "id")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R
                                                       Data.Text.Internal.Text>_R) <x1>_N)
                       g6
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Main.Position>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "position")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R Main.Position>_R) <x1>_N))
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Maybe.Just "size")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Main.Size))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Maybe.Just "content")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Main.ToolContent))
                       @ x1
                       g7
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Main.Size>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "size")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R Main.Size>_R) <x1>_N)
                       g8
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Main.ToolContent>_R
                                 <x1>_P) ; Sym (GHC.Generics.N:M1[0]
                                                    <*>_N
                                                    <GHC.Generics.S>_P
                                                    <'GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "content")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy>_P
                                                    <GHC.Generics.K1
                                                       GHC.Generics.R Main.ToolContent>_R) <x1>_N)))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "Tool" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "id")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Maybe.Just "position")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R Main.Position))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Maybe.Just "size")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R Main.Size)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Maybe.Just "content")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Main.ToolContent))>_R) <x1>_N) }) -}
b13e911416f3fb02afecb5ff88147ef6
  $fGenericToolContent :: GHC.Generics.Generic Main.ToolContent
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.ToolContent
                  Main.$fGenericToolContent1
                    `cast`
                  (forall (x1 :: <*>_N).
                   <Main.ToolContent>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData
                                     "ToolContent" "Main" "main" 'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "TextContent" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           'GHC.Maybe.Nothing
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R
                                           Data.Text.Internal.Text))>_R) ; Sub (Sym (Main.Rep_ToolContent[0]))) <x1>_N)
                  Main.$fGenericToolContent_$cto -}
b13e911416f3fb02afecb5ff88147ef6
  $fGenericToolContent1 ::
    Main.ToolContent
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "TextContent" 'GHC.Generics.PrefixI 'GHC.Types.False)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               'GHC.Maybe.Nothing
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1 (x2 :: Main.ToolContent) ->
                 case x2 of wild { Main.TextContent g5 ->
                 g5
                   `cast`
                 (Sym (GHC.Generics.N:K1[0]
                           <*>_N
                           <GHC.Generics.R>_P
                           <Data.Text.Internal.Text>_R
                           <x1>_P) ; (Sym (GHC.Generics.N:M1[0]
                                               <*>_N
                                               <GHC.Generics.S>_P
                                               <'GHC.Generics.MetaSel
                                                  'GHC.Maybe.Nothing
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy>_P
                                               <GHC.Generics.K1
                                                  GHC.Generics.R
                                                  Data.Text.Internal.Text>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                         <*>_N
                                                                                         <GHC.Generics.C>_P
                                                                                         <'GHC.Generics.MetaCons
                                                                                            "TextContent"
                                                                                            'GHC.Generics.PrefixI
                                                                                            'GHC.Types.False>_P
                                                                                         <GHC.Generics.M1
                                                                                            GHC.Generics.S
                                                                                            ('GHC.Generics.MetaSel
                                                                                               'GHC.Maybe.Nothing
                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                               'GHC.Generics.DecidedLazy)
                                                                                            (GHC.Generics.K1
                                                                                               GHC.Generics.R
                                                                                               Data.Text.Internal.Text)>_R)) <x1>_N) }) -}
b13e911416f3fb02afecb5ff88147ef6
  $fGenericToolContent_$cto ::
    GHC.Generics.Rep Main.ToolContent x -> Main.ToolContent
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, True)
                (\ @ x1 (ds :: GHC.Generics.Rep Main.ToolContent x1) ->
                 Main.TextContent
                   ds
                     `cast`
                   ((Sub (Main.Rep_ToolContent[0]) ; (GHC.Generics.N:M1[0]
                                                          <*>_N
                                                          <GHC.Generics.D>_P
                                                          <'GHC.Generics.MetaData
                                                             "ToolContent"
                                                             "Main"
                                                             "main"
                                                             'GHC.Types.False>_P
                                                          <GHC.Generics.M1
                                                             GHC.Generics.C
                                                             ('GHC.Generics.MetaCons
                                                                "TextContent"
                                                                'GHC.Generics.PrefixI
                                                                'GHC.Types.False)
                                                             (GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   'GHC.Maybe.Nothing
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   Data.Text.Internal.Text))>_R ; (GHC.Generics.N:M1[0]
                                                                                                       <*>_N
                                                                                                       <GHC.Generics.C>_P
                                                                                                       <'GHC.Generics.MetaCons
                                                                                                          "TextContent"
                                                                                                          'GHC.Generics.PrefixI
                                                                                                          'GHC.Types.False>_P
                                                                                                       <GHC.Generics.M1
                                                                                                          GHC.Generics.S
                                                                                                          ('GHC.Generics.MetaSel
                                                                                                             'GHC.Maybe.Nothing
                                                                                                             'GHC.Generics.NoSourceUnpackedness
                                                                                                             'GHC.Generics.NoSourceStrictness
                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                          (GHC.Generics.K1
                                                                                                             GHC.Generics.R
                                                                                                             Data.Text.Internal.Text)>_R ; GHC.Generics.N:M1[0]
                                                                                                                                               <*>_N
                                                                                                                                               <GHC.Generics.S>_P
                                                                                                                                               <'GHC.Generics.MetaSel
                                                                                                                                                  'GHC.Maybe.Nothing
                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                                                                  'GHC.Generics.DecidedLazy>_P
                                                                                                                                               <GHC.Generics.K1
                                                                                                                                                  GHC.Generics.R
                                                                                                                                                  Data.Text.Internal.Text>_R))) <x1>_N ; GHC.Generics.N:K1[0]
                                                                                                                                                                                             <*>_N
                                                                                                                                                                                             <GHC.Generics.R>_P
                                                                                                                                                                                             <Data.Text.Internal.Text>_R
                                                                                                                                                                                             <x1>_P)) -}
561af1a136195d9bf53457cd6693d411
  $fGenericTool_$cto :: GHC.Generics.Rep Main.Tool x -> Main.Tool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(U,U),1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x1 (ds :: GHC.Generics.Rep Main.Tool x1) ->
                 case ds
                        `cast`
                      ((Sub (Main.Rep_Tool[0]) ; (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.D>_P
                                                      <'GHC.Generics.MetaData
                                                         "Tool" "Main" "main" 'GHC.Types.False>_P
                                                      <GHC.Generics.M1
                                                         GHC.Generics.C
                                                         ('GHC.Generics.MetaCons
                                                            "Tool"
                                                            'GHC.Generics.PrefixI
                                                            'GHC.Types.True)
                                                         ((GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Maybe.Just "id")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R
                                                                Data.Text.Internal.Text)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Maybe.Just
                                                                                    "position")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Main.Position))
                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Maybe.Just
                                                                                    "size")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 Main.Size)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Maybe.Just
                                                                                                     "content")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Main.ToolContent)))>_R ; GHC.Generics.N:M1[0]
                                                                                                                               <*>_N
                                                                                                                               <GHC.Generics.C>_P
                                                                                                                               <'GHC.Generics.MetaCons
                                                                                                                                  "Tool"
                                                                                                                                  'GHC.Generics.PrefixI
                                                                                                                                  'GHC.Types.True>_P
                                                                                                                               <(GHC.Generics.M1
                                                                                                                                   GHC.Generics.S
                                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                                      ('GHC.Maybe.Just
                                                                                                                                         "id")
                                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                                   (GHC.Generics.K1
                                                                                                                                      GHC.Generics.R
                                                                                                                                      Data.Text.Internal.Text)
                                                                                                                                 GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                    GHC.Generics.S
                                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                                       ('GHC.Maybe.Just
                                                                                                                                                          "position")
                                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                                    (GHC.Generics.K1
                                                                                                                                                       GHC.Generics.R
                                                                                                                                                       Main.Position))
                                                                                                                                GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                                    GHC.Generics.S
                                                                                                                                                    ('GHC.Generics.MetaSel
                                                                                                                                                       ('GHC.Maybe.Just
                                                                                                                                                          "size")
                                                                                                                                                       'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                       'GHC.Generics.NoSourceStrictness
                                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                                    (GHC.Generics.K1
                                                                                                                                                       GHC.Generics.R
                                                                                                                                                       Main.Size)
                                                                                                                                                  GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                                     GHC.Generics.S
                                                                                                                                                                     ('GHC.Generics.MetaSel
                                                                                                                                                                        ('GHC.Maybe.Just
                                                                                                                                                                           "content")
                                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                        'GHC.Generics.NoSourceStrictness
                                                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                                                     (GHC.Generics.K1
                                                                                                                                                                        GHC.Generics.R
                                                                                                                                                                        Main.ToolContent))>_R)) <x1>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds1 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 case ds2 of wild2 { GHC.Generics.:*: ds5 ds6 ->
                 Main.Tool
                   ds3
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "id")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R
                           Data.Text.Internal.Text>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                   <*>_N
                                                                   <GHC.Generics.R>_P
                                                                   <Data.Text.Internal.Text>_R
                                                                   <x1>_P)
                   ds4
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "position")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R Main.Position>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                        <*>_N
                                                                        <GHC.Generics.R>_P
                                                                        <Main.Position>_R
                                                                        <x1>_P)
                   ds5
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "size")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R Main.Size>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                    <*>_N
                                                                    <GHC.Generics.R>_P
                                                                    <Main.Size>_R
                                                                    <x1>_P)
                   ds6
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "content")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R Main.ToolContent>_R <x1>_N ; GHC.Generics.N:K1[0]
                                                                           <*>_N
                                                                           <GHC.Generics.R>_P
                                                                           <Main.ToolContent>_R
                                                                           <x1>_P) } } }) -}
b52c6098c45a6ade437a5258d79a2a98
  $fShowExposition :: GHC.Show.Show Main.Exposition
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Exposition
                  Main.$fShowExposition_$cshowsPrec
                  Main.$fShowExposition_$cshow
                  Main.$fShowExposition_$cshowList -}
b52c6098c45a6ade437a5258d79a2a98
  $fShowExposition1 :: Main.Exposition -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S,1*U(1*U(U,U,U),1*U(U,U,U),1*U(U,U,U),1*U)><L,U>,
     Unfolding: (\ (w :: Main.Exposition) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.Exposition ww1 ww2 ww3 ww4 ->
                 Main.$w$cshowsPrec 0# ww1 ww2 ww3 ww4 w1 }) -}
9f1791a8df6eecd0bb2c210eb908979f
  $fShowExposition2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
b52c6098c45a6ade437a5258d79a2a98
  $fShowExposition_$cshow :: Main.Exposition -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U,U,U),1*U(U,U,U),1*U(U,U,U),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Main.Exposition) ->
                 Main.$fShowExposition_$cshowsPrec
                   Main.$fShowExposition2
                   x1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
b52c6098c45a6ade437a5258d79a2a98
  $fShowExposition_$cshowList :: [Main.Exposition] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Exposition]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Main.Exposition
                   Main.$fShowExposition1
                   ls
                   s) -}
b52c6098c45a6ade437a5258d79a2a98
  $fShowExposition_$cshowsPrec ::
    GHC.Types.Int -> Main.Exposition -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U),1*U(U,U,U),1*U(U,U,U),1*U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Exposition)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.Exposition ww3 ww4 ww5 ww6 ->
                 Main.$w$cshowsPrec ww1 ww3 ww4 ww5 ww6 w2 } }) -}
561af1a136195d9bf53457cd6693d411
  $fShowPosition :: GHC.Show.Show Main.Position
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Position
                  Main.$fShowPosition_$cshowsPrec
                  Main.$fShowPosition_$cshow
                  Main.$fShowPosition_$cshowList -}
561af1a136195d9bf53457cd6693d411
  $fShowPosition1 :: Main.Position -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>,
     Unfolding: (\ (w :: Main.Position) ->
                 case w of ww { Main.Position ww1 ww2 ->
                 Main.$w$cshowsPrec1 0# ww1 ww2 }) -}
700a534120250dc2919f3e5c3078b480
  $fShowPosition2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
dd98013e1de73b9e87079bfeca84120f
  $fShowPosition3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("top = "#) -}
b8c67cc28d93e13cfbe86abbd7aaeb05
  $fShowPosition4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("left = "#) -}
7c074a7a90548f9df8f7878be0aaf8e4
  $fShowPosition5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Position {"#) -}
561af1a136195d9bf53457cd6693d411
  $fShowPosition_$cshow :: Main.Position -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Main.Position) ->
                 Main.$fShowPosition_$cshowsPrec
                   Main.$fShowExposition2
                   x1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
561af1a136195d9bf53457cd6693d411
  $fShowPosition_$cshowList :: [Main.Position] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Position]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Position Main.$fShowPosition1 ls s) -}
561af1a136195d9bf53457cd6693d411
  $fShowPosition_$cshowsPrec ::
    GHC.Types.Int -> Main.Position -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U)>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Main.Position) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.Position ww3 ww4 ->
                 Main.$w$cshowsPrec1 ww1 ww3 ww4 } }) -}
8f46b23e3f0254dc8e7f73bf9e799411
  $fShowSize :: GHC.Show.Show Main.Size
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Size
                  Main.$fShowSize_$cshowsPrec
                  Main.$fShowSize_$cshow
                  Main.$fShowSize_$cshowList -}
8f46b23e3f0254dc8e7f73bf9e799411
  $fShowSize1 :: Main.Size -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>,
     Unfolding: (\ (w :: Main.Size) ->
                 case w of ww { Main.Size ww1 ww2 ->
                 Main.$w$cshowsPrec2 0# ww1 ww2 }) -}
d465eae466b4a46eaee4f49135c45ac5
  $fShowSize2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("height = "#) -}
41eeba1bb57b606c7e98d62346663078
  $fShowSize3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("width = "#) -}
52f294216ae3f0a145420bd2574dbbec
  $fShowSize4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Size {"#) -}
8f46b23e3f0254dc8e7f73bf9e799411
  $fShowSize_$cshow :: Main.Size -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Main.Size) ->
                 Main.$fShowSize_$cshowsPrec
                   Main.$fShowExposition2
                   x1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8f46b23e3f0254dc8e7f73bf9e799411
  $fShowSize_$cshowList :: [Main.Size] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Size]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Size Main.$fShowSize1 ls s) -}
8f46b23e3f0254dc8e7f73bf9e799411
  $fShowSize_$cshowsPrec ::
    GHC.Types.Int -> Main.Size -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U)>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Main.Size) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.Size ww3 ww4 ->
                 Main.$w$cshowsPrec2 ww1 ww3 ww4 } }) -}
561af1a136195d9bf53457cd6693d411
  $fShowTool :: GHC.Show.Show Main.Tool
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Tool
                  Main.$fShowTool_$cshowsPrec
                  Main.$fShowTool_$cshow
                  Main.$fShowTool_$cshowList -}
561af1a136195d9bf53457cd6693d411
  $fShowTool1 :: Main.Tool -> GHC.Show.ShowS
  {- Arity: 1,
     Strictness: <S,1*U(U(U,U,U),1*U(1*U,1*U),1*U(1*U,1*U),U(U(U,U,U)))>,
     Unfolding: (\ (w :: Main.Tool) ->
                 case w of ww { Main.Tool ww1 ww2 ww3 ww4 ->
                 Main.$w$cshowsPrec3 0# ww1 ww2 ww3 ww4 }) -}
efd3b46a668ca237fcc9cb166eddf5bb
  $fShowTool2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TextContent "#) -}
191e5f168d1a03372027b1e0bab7d860
  $fShowTool3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("content = "#) -}
4e5dd527b687cb5533ef6b54e7dab1f3
  $fShowTool4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("size = "#) -}
89614fd18594a916d72933ccb1c533fa
  $fShowTool5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("position = "#) -}
ba1e2d71c58324baf62a6a28f1e613ba
  $fShowTool6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("id = "#) -}
842d7ecaf0aa4263436519f6e4873c9d
  $fShowTool7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Tool {"#) -}
b13e911416f3fb02afecb5ff88147ef6
  $fShowToolContent :: GHC.Show.Show Main.ToolContent
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.ToolContent
                  Main.$fShowToolContent_$cshowsPrec
                  Main.$fShowToolContent_$cshow
                  Main.$fShowToolContent_$cshowList -}
b13e911416f3fb02afecb5ff88147ef6
  $fShowToolContent1 :: Main.ToolContent -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U(U,U,U))><L,U>,
     Unfolding: (\ (w :: Main.ToolContent) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.TextContent ww1 ->
                 Main.$w$cshowsPrec4 0# ww1 w1 }) -}
b13e911416f3fb02afecb5ff88147ef6
  $fShowToolContent_$cshow :: Main.ToolContent -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U,U,U))>, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Main.ToolContent) ->
                 case w of ww { Main.TextContent ww1 -> Main.$w$cshow ww1 }) -}
b13e911416f3fb02afecb5ff88147ef6
  $fShowToolContent_$cshowList ::
    [Main.ToolContent] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.ToolContent]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Main.ToolContent
                   Main.$fShowToolContent1
                   ls
                   s) -}
b13e911416f3fb02afecb5ff88147ef6
  $fShowToolContent_$cshowsPrec ::
    GHC.Types.Int -> Main.ToolContent -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U))><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.ToolContent)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.TextContent ww3 ->
                 Main.$w$cshowsPrec4 ww1 ww3 w2 } }) -}
561af1a136195d9bf53457cd6693d411
  $fShowTool_$cshow :: Main.Tool -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(U(U,U,U),1*U(1*U,1*U),1*U(1*U,1*U),U(U(U,U,U)))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Main.Tool) ->
                 Main.$fShowTool_$cshowsPrec
                   Main.$fShowExposition2
                   x1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
561af1a136195d9bf53457cd6693d411
  $fShowTool_$cshowList :: [Main.Tool] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Tool]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Tool Main.$fShowTool1 ls s) -}
561af1a136195d9bf53457cd6693d411
  $fShowTool_$cshowsPrec ::
    GHC.Types.Int -> Main.Tool -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(U(U,U,U),1*U(1*U,1*U),1*U(1*U,1*U),U(U(U,U,U)))>,
     Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Main.Tool) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.Tool ww3 ww4 ww5 ww6 ->
                 Main.$w$cshowsPrec3 ww1 ww3 ww4 ww5 ww6 } }) -}
b52c6098c45a6ade437a5258d79a2a98
  $fToJSONExposition ::
    Data.Aeson.Types.ToJSON.ToJSON Main.Exposition
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Exposition
                  Main.$fToJSONExposition_$ctoJSON
                  Main.$fToJSONExposition_$ctoEncoding
                  Main.$fToJSONExposition_$ctoJSONList
                  Main.$fToJSONExposition_$ctoEncodingList -}
a07aab251cacc66433aff9989177ffea
  $fToJSONExposition1 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Main.$fToJSONExposition2 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
c2b8e26ad84f6e10db97d4389a0a124c
  $fToJSONExposition10 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Main.$fToJSONExposition11
                   0#
                   ipv1 }) -}
31a8d0a913d32446d8ac2a82b3abf59a
  $fToJSONExposition11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fToJSONExposition12) -}
43b0cd6789ce08721634ce7f4f173a79
  $fToJSONExposition12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("width"#) -}
12ae80c398f7c73d9a129931e0e7a4c2
  $fToJSONExposition13 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Main.$fToJSONExposition14 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
1274f06b8f3d254ecd8824b8f4dec048
  $fToJSONExposition14 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Main.$fToJSONExposition15
                   0#
                   ipv1 }) -}
b3393cf89624539661ed98eba59772ef
  $fToJSONExposition15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fToJSONExposition16) -}
1ff5752b711c61c8b1fe7fce021c8b9b
  $fToJSONExposition16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("size"#) -}
ba172a99c4180cca1cea2afbd336dc13
  $fToJSONExposition17 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Main.$fToJSONExposition18 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
d888ffe1effbbe392fa64fb1f2cf6cac
  $fToJSONExposition18 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Main.$fToJSONExposition19
                   0#
                   ipv1 }) -}
72091d0da3f227189393488cfd82ef36
  $fToJSONExposition19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fToJSONExposition20) -}
72d7e79f6a37123baa03a66af52ad828
  $fToJSONExposition2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Main.$fToJSONExposition3
                   0#
                   ipv1 }) -}
384129d0483e9cc32115e778efde3912
  $fToJSONExposition20 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("top"#) -}
9cfe756088664df0b84f82bbcd91bee7
  $fToJSONExposition21 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Main.$fToJSONExposition22 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
6f7201b4841ed41e3eb0368966204a56
  $fToJSONExposition22 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Main.$fToJSONExposition23
                   0#
                   ipv1 }) -}
357f8e8c078d5678183a01522a1ac704
  $fToJSONExposition23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fToJSONExposition24) -}
b4de89bd59b41db3b7fd8f068c8c4409
  $fToJSONExposition24 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("left"#) -}
801f639b31091dae08152caf9d030548
  $fToJSONExposition25 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Main.$fToJSONExposition26 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
00254bf2c5ab43d4d77ef0bbd5ea2bd9
  $fToJSONExposition26 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Main.$fToJSONExposition27
                   0#
                   ipv1 }) -}
a18c152ef0254d0b317cf361f3c6460e
  $fToJSONExposition27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fToJSONExposition28) -}
19a31e1f8ff04adaca67843660b44af9
  $fToJSONExposition28 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("position"#) -}
37114903b494126aadd5afabcf88a267
  $fToJSONExposition29 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Main.$fToJSONExposition30 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
4a68ac6ed554562343148bcbfaa83b86
  $fToJSONExposition3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fToJSONExposition4) -}
7bbe032431fe75a4dde4ed784800cb66
  $fToJSONExposition30 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Main.$fToJSONExposition31
                   0#
                   ipv1 }) -}
a4a5e12155f64429e3781e8a06cdbf39
  $fToJSONExposition31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fToJSONExposition32) -}
d4acd69c27b9bc64cacaf41f935b5c73
  $fToJSONExposition32 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("id"#) -}
cb695c632d1edb68b1c87679f8390200
  $fToJSONExposition33 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Main.$fToJSONExposition34 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
0f392a58dc3a3974594171ecbb5b5b1a
  $fToJSONExposition34 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Main.$fToJSONExposition35
                   0#
                   ipv1 }) -}
9fbdba5ccb8f1182f12bde74c4500cdc
  $fToJSONExposition35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fToJSONExposition36) -}
a55fe022bf084418e7e9c8c82f063dfa
  $fToJSONExposition36 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("tools"#) -}
cf360b7a1fcd0ca187e5910acea08ebb
  $fToJSONExposition37 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Main.$fToJSONExposition38 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
9fcd9a0ac162aec6a1de7cb91f5c97e7
  $fToJSONExposition38 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Main.$fToJSONExposition39
                   0#
                   ipv1 }) -}
476ced522e0058f13149f037a3c8e5ba
  $fToJSONExposition39 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fToJSONExposition40) -}
6d4f7081bc737ac6f4cf6825dc998107
  $fToJSONExposition4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("content"#) -}
d6258c49275c0ee639ee98abc5094b1d
  $fToJSONExposition40 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("date"#) -}
10b7ae95629777d863a8faf9e4c20b59
  $fToJSONExposition41 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Main.$fToJSONExposition42 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
6bb4f2099ed66bb513713da7b7500ad4
  $fToJSONExposition42 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Main.$fToJSONExposition43
                   0#
                   ipv1 }) -}
63f896a5c3f42a0a9eda83fcfaa327e6
  $fToJSONExposition43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fToJSONExposition44) -}
a263cb7cf7c9eb80c89ddfa2532833c1
  $fToJSONExposition44 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("author"#) -}
79af6a107429ceb535c6a67bebf25da0
  $fToJSONExposition45 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Main.$fToJSONExposition46 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
417df9e846329d1a83e3f292abecb79a
  $fToJSONExposition46 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Main.$fToJSONExposition47
                   0#
                   ipv1 }) -}
62537937eb90b4836e2316b39563121d
  $fToJSONExposition47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fToJSONExposition48) -}
e4626d848371fdeb0b30222760377712
  $fToJSONExposition48 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("title"#) -}
9a3fca8ac57f74e4ed28dcbd6a178c47
  $fToJSONExposition5 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Main.$fToJSONExposition6 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
a948c25d4a850dfe36f8f492e7a3c12b
  $fToJSONExposition6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Main.$fToJSONExposition7
                   0#
                   ipv1 }) -}
6d59b24d4a012d7a432615f583263172
  $fToJSONExposition7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fToJSONExposition8) -}
4ee8f72ac49128d075bfc35b1ce342fe
  $fToJSONExposition8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("height"#) -}
27002a6aa816ddd81e7e7ee4c311deb8
  $fToJSONExposition9 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Main.$fToJSONExposition10 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
b52c6098c45a6ade437a5258d79a2a98
  $fToJSONExposition_$ctoEncoding ::
    Main.Exposition -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(U,U,U,1*U)>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: Main.Exposition) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Main.$fToJSONExposition_$ctoJSON x1))
                  `cast`
                (<Main.Exposition>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
b52c6098c45a6ade437a5258d79a2a98
  $fToJSONExposition_$ctoEncodingList ::
    [Main.Exposition] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Main.Exposition
                   Main.$fToJSONExposition_$ctoEncoding) -}
b52c6098c45a6ade437a5258d79a2a98
  $fToJSONExposition_$ctoJSON ::
    Main.Exposition -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U,U,1*U)>m1, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Main.Exposition) ->
                 case w of ww { Main.Exposition ww1 ww2 ww3 ww4 ->
                 case Main.$w$ctoJSON ww1 ww2 ww3 ww4 of ww5 { Unit# ww6 ->
                 Data.Aeson.Types.Internal.Object ww6 } }) -}
561af1a136195d9bf53457cd6693d411
  $fToJSONExposition_$ctoJSON1 ::
    Main.Tool -> Data.Aeson.Types.Internal.Value
  {- Arity: 1,
     Strictness: <S,1*U(U,1*U(1*U,1*U),1*U(1*U,1*U),1*U(1*U(U,U,U)))>m1,
     Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Main.Tool) ->
                 case w of ww { Main.Tool ww1 ww2 ww3 ww4 ->
                 case Main.$w$ctoJSON1 ww1 ww2 ww3 ww4 of ww5 { Unit# ww6 ->
                 Data.Aeson.Types.Internal.Object ww6 } }) -}
b13e911416f3fb02afecb5ff88147ef6
  $fToJSONExposition_$ctoJSON2 ::
    Main.ToolContent -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U(U,U,U))>m3,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Main.ToolContent) ->
                 case x1 of wild { Main.TextContent g5 ->
                 case g5 of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.String dt } }) -}
8f46b23e3f0254dc8e7f73bf9e799411
  $fToJSONExposition_$ctoJSON3 ::
    Main.Size -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>m1, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Main.Size) ->
                 case w of ww { Main.Size ww1 ww2 ->
                 case Main.$w$ctoJSON2 ww1 ww2 of ww3 { Unit# ww4 ->
                 Data.Aeson.Types.Internal.Object ww4 } }) -}
561af1a136195d9bf53457cd6693d411
  $fToJSONExposition_$ctoJSON4 ::
    Main.Position -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>m1, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Main.Position) ->
                 case w of ww { Main.Position ww1 ww2 ->
                 case Main.$w$ctoJSON3 ww1 ww2 of ww3 { Unit# ww4 ->
                 Data.Aeson.Types.Internal.Object ww4 } }) -}
b52c6098c45a6ade437a5258d79a2a98
  $fToJSONExposition_$ctoJSONList ::
    [Main.Exposition] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: [Main.Exposition]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Main.Exposition
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Main.Exposition
                                     c
                                     Main.$fToJSONExposition_$ctoJSON)
                                  n1
                                  x1)))))) -}
561af1a136195d9bf53457cd6693d411
  $fToJSONPosition :: Data.Aeson.Types.ToJSON.ToJSON Main.Position
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Position
                  Main.$fToJSONExposition_$ctoJSON4
                  Main.$fToJSONPosition_$ctoEncoding
                  Main.$fToJSONPosition_$ctoJSONList
                  Main.$fToJSONPosition_$ctoEncodingList -}
561af1a136195d9bf53457cd6693d411
  $fToJSONPosition_$ctoEncoding ::
    Main.Position -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: Main.Position) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Main.$fToJSONExposition_$ctoJSON4 x1))
                  `cast`
                (<Main.Position>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
561af1a136195d9bf53457cd6693d411
  $fToJSONPosition_$ctoEncodingList ::
    [Main.Position] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Main.Position
                   Main.$fToJSONPosition_$ctoEncoding) -}
561af1a136195d9bf53457cd6693d411
  $fToJSONPosition_$ctoJSONList ::
    [Main.Position] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: [Main.Position]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Main.Position
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Main.Position
                                     c
                                     Main.$fToJSONExposition_$ctoJSON4)
                                  n1
                                  x1)))))) -}
8f46b23e3f0254dc8e7f73bf9e799411
  $fToJSONSize :: Data.Aeson.Types.ToJSON.ToJSON Main.Size
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Size
                  Main.$fToJSONExposition_$ctoJSON3
                  Main.$fToJSONSize_$ctoEncoding
                  Main.$fToJSONSize_$ctoJSONList
                  Main.$fToJSONSize_$ctoEncodingList -}
8f46b23e3f0254dc8e7f73bf9e799411
  $fToJSONSize_$ctoEncoding ::
    Main.Size -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: Main.Size) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Main.$fToJSONExposition_$ctoJSON3 x1))
                  `cast`
                (<Main.Size>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
8f46b23e3f0254dc8e7f73bf9e799411
  $fToJSONSize_$ctoEncodingList ::
    [Main.Size] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Main.Size
                   Main.$fToJSONSize_$ctoEncoding) -}
8f46b23e3f0254dc8e7f73bf9e799411
  $fToJSONSize_$ctoJSONList ::
    [Main.Size] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: [Main.Size]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Main.Size
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Main.Size
                                     c
                                     Main.$fToJSONExposition_$ctoJSON3)
                                  n1
                                  x1)))))) -}
561af1a136195d9bf53457cd6693d411
  $fToJSONTool :: Data.Aeson.Types.ToJSON.ToJSON Main.Tool
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Tool
                  Main.$fToJSONExposition_$ctoJSON1
                  Main.$fToJSONTool_$ctoEncoding
                  Main.$fToJSONTool_$ctoJSONList
                  Main.$fToJSONTool_$ctoEncodingList -}
b13e911416f3fb02afecb5ff88147ef6
  $fToJSONToolContent ::
    Data.Aeson.Types.ToJSON.ToJSON Main.ToolContent
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.ToolContent
                  Main.$fToJSONExposition_$ctoJSON2
                  Main.$fToJSONToolContent_$ctoEncoding
                  Main.$fToJSONToolContent_$ctoJSONList
                  Main.$fToJSONToolContent_$ctoEncodingList -}
b13e911416f3fb02afecb5ff88147ef6
  $fToJSONToolContent_$ctoEncoding ::
    Main.ToolContent -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S(S),1*U(1*U(U,U,U))>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: Main.ToolContent) ->
                 case x1 of wild { Main.TextContent g5 ->
                 case g5 of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Data.Aeson.Types.Internal.String dt) } })
                  `cast`
                (<Main.ToolContent>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
b13e911416f3fb02afecb5ff88147ef6
  $fToJSONToolContent_$ctoEncodingList ::
    [Main.ToolContent] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Main.ToolContent
                   Main.$fToJSONToolContent_$ctoEncoding) -}
b13e911416f3fb02afecb5ff88147ef6
  $fToJSONToolContent_$ctoJSONList ::
    [Main.ToolContent] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: [Main.ToolContent]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Main.ToolContent
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Main.ToolContent
                                     c
                                     Main.$fToJSONExposition_$ctoJSON2)
                                  n1
                                  x1)))))) -}
561af1a136195d9bf53457cd6693d411
  $fToJSONTool_$ctoEncoding ::
    Main.Tool -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1,
     Strictness: <S,1*U(U,1*U(1*U,1*U),1*U(1*U,1*U),1*U(1*U(U,U,U)))>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: Main.Tool) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Main.$fToJSONExposition_$ctoJSON1 x1))
                  `cast`
                (<Main.Tool>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
561af1a136195d9bf53457cd6693d411
  $fToJSONTool_$ctoEncodingList ::
    [Main.Tool] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Main.Tool
                   Main.$fToJSONTool_$ctoEncoding) -}
561af1a136195d9bf53457cd6693d411
  $fToJSONTool_$ctoJSONList ::
    [Main.Tool] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x1 :: [Main.Tool]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Main.Tool
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Main.Tool
                                     c
                                     Main.$fToJSONExposition_$ctoJSON1)
                                  n1
                                  x1)))))) -}
8fe54f3143a5aa5f0cd3b9d0c86cefb9
  $tc'Exposition :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15773052098599619035##
                   2442810192449473146##
                   Main.$trModule
                   Main.$tc'Exposition2
                   0#
                   Main.$tc'Exposition1) -}
f32ba88251426ee62618f17cfad20d00
  $tc'Exposition1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0e52d15ab056527574b5d78ea2c1b5ac
  $tc'Exposition2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Exposition3) -}
50eb39e9757b7859da5d45ff8f5ef86f
  $tc'Exposition3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Exposition"#) -}
dc89cda728aa1563ca8de6e8dff4282b
  $tc'Position :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3479766395397522623##
                   16784496056996396338##
                   Main.$trModule
                   Main.$tc'Position2
                   0#
                   Main.$tc'Position1) -}
ba28e459f2eb7bb804c8720e3fc2b861
  $tc'Position1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
28addcf3655678674dfa226a40858336
  $tc'Position2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Position3) -}
99d3bb81c4e6c9285a3747daa79f38f2
  $tc'Position3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Position"#) -}
f54831b803e5e1d1011d3fcf4f14d644
  $tc'Size :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9477901889480443933##
                   3767220868816084738##
                   Main.$trModule
                   Main.$tc'Size2
                   0#
                   Main.$tc'Size1) -}
ffb595d12fbe5ab3d2c62390a771b7af
  $tc'Size1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
7ba58cc478e14ef43f742237f595b354
  $tc'Size2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Size3) -}
98b2253aae3bf03b2a48c9b9c26abf6b
  $tc'Size3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Size"#) -}
e4c9bccdd89ec70dbdc08ffdfbe50272
  $tc'TextContent :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17566904966883211708##
                   6472451103149762046##
                   Main.$trModule
                   Main.$tc'TextContent2
                   0#
                   Main.$tc'TextContent1) -}
575b8ecacc9d21abdc0de8079f76e52d
  $tc'TextContent1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
85049e2a6a8a3d4ec6b9c99eceb70236
  $tc'TextContent2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'TextContent3) -}
e733c474b648d5981d0c4238b8c59308
  $tc'TextContent3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TextContent"#) -}
6dbd67d0b8b355d2eca3286c6073cf36
  $tc'Tool :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7711805193683468734##
                   8032452337682411234##
                   Main.$trModule
                   Main.$tc'Tool2
                   0#
                   Main.$tc'Tool1) -}
e5391372b7cac77847a030d3beaf9ba5
  $tc'Tool1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
9a45651b50342a8b0d668456341779c9
  $tc'Tool2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Tool3) -}
f356237b5fff5d4e1d29741bb8ef6cfc
  $tc'Tool3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Tool"#) -}
0f37442e11c23e37b7e2ca4e9541f9fc
  $tcExposition :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4698927067040372220##
                   6753154118484261007##
                   Main.$trModule
                   Main.$tcExposition1
                   0#
                   GHC.Types.krep$*) -}
7dfd03f1ef49f38018e1962844485baa
  $tcExposition1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcExposition2) -}
0e06b9deb91464358eb933ba72e0d659
  $tcExposition2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Exposition"#) -}
6b5b761ff37e9c9fb8e66b387da83b45
  $tcPosition :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   187692833038080454##
                   189549404140383600##
                   Main.$trModule
                   Main.$tcPosition1
                   0#
                   GHC.Types.krep$*) -}
14608133cd9684dcefb403c4fbf39117
  $tcPosition1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcPosition2) -}
92e1fd9a4acf159b72cfecb1fe27ca6d
  $tcPosition2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Position"#) -}
e2abf50aa445fbc8f4acdf3fb71b3510
  $tcSize :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8169643558939655881##
                   10307364764749754797##
                   Main.$trModule
                   Main.$tcSize1
                   0#
                   GHC.Types.krep$*) -}
32eac67f3603b4133a7f04309b2f6438
  $tcSize1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcSize2) -}
6a1b7fdf38e518e36e97dece578bca06
  $tcSize2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Size"#) -}
722e2487bd49ecf89b7f8d551c410bec
  $tcTool :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17667876902036346806##
                   4948648237823238726##
                   Main.$trModule
                   Main.$tcTool1
                   0#
                   GHC.Types.krep$*) -}
30b16e4991d9b96caf0fbb3a6ea3ef8e
  $tcTool1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcTool2) -}
dfdfda4418870708ddc1bf4e84af587a
  $tcTool2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Tool"#) -}
190e7dab04aecde6495b2e0937d79ddc
  $tcToolContent :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6115662148275663421##
                   11559896758932083822##
                   Main.$trModule
                   Main.$tcToolContent1
                   0#
                   GHC.Types.krep$*) -}
d957e67808465e5e60f081b174f1d9a3
  $tcToolContent1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcToolContent2) -}
067f50af1b36c006982a40609e529882
  $tcToolContent2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ToolContent"#) -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
b2b67308e140fc99f72ccb3d8b3b1ee6
  $w$cshow :: Data.Text.Internal.Text -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>, Inline: [2],
     Unfolding: (\ (ww :: Data.Text.Internal.Text) ->
                 GHC.CString.unpackAppendCString#
                   Main.$fShowTool2
                   (case Data.Text.Show.$w$cshowsPrec
                           ww
                           (GHC.Types.[] @ GHC.Types.Char) of ww1 { (#,#) ww2 ww3 ->
                    GHC.Types.: @ GHC.Types.Char ww2 ww3 })) -}
babd80ac1449ccdfecc5b8aab604bbe7
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> [Main.Tool]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 6,
     Strictness: <S,U><L,1*U(U,U,U)><L,1*U(U,U,U)><L,1*U(U,U,U)><L,1*U><L,U>,
     Inline: [2] -}
37a59461fb39bc9cf963b5ff05ec9259
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> GHC.Maybe.Maybe GHC.Types.Int
    -> GHC.Maybe.Maybe GHC.Types.Int
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,U><L,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Maybe.Maybe GHC.Types.Int)
                   (ww2 :: GHC.Maybe.Maybe GHC.Types.Int) ->
                 let {
                   f5 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ GHC.Types.Int
                       GHC.Show.$fShowInt
                       Main.$fShowExposition2
                       ww1
                 } in
                 let {
                   f6 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ GHC.Types.Int
                       GHC.Show.$fShowInt
                       Main.$fShowExposition2
                       ww2
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> \ (x1 :: GHC.Base.String) ->
                      GHC.CString.unpackAppendCString#
                        Main.$fShowPosition5
                        (GHC.CString.unpackAppendCString#
                           Main.$fShowPosition4
                           (f5
                              (GHC.Base.++
                                 @ GHC.Types.Char
                                 GHC.Show.showCommaSpace1
                                 (GHC.CString.unpackAppendCString#
                                    Main.$fShowPosition3
                                    (f6
                                       (GHC.CString.unpackAppendCString#
                                          Main.$fShowPosition2
                                          x1))))))
                   1#
                   -> \ (x1 :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Main.$fShowPosition5
                           (GHC.CString.unpackAppendCString#
                              Main.$fShowPosition4
                              (f5
                                 (GHC.Base.++
                                    @ GHC.Types.Char
                                    GHC.Show.showCommaSpace1
                                    (GHC.CString.unpackAppendCString#
                                       Main.$fShowPosition3
                                       (f6
                                          (GHC.CString.unpackAppendCString#
                                             Main.$fShowPosition2
                                             (GHC.Types.:
                                                @ GHC.Types.Char
                                                GHC.Show.$fShow(,)2
                                                x1)))))))) }) -}
5f3cc734f1ccae8ede420de0970d756a
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> GHC.Maybe.Maybe GHC.Types.Int
    -> GHC.Maybe.Maybe GHC.Types.Int
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,U><L,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Maybe.Maybe GHC.Types.Int)
                   (ww2 :: GHC.Maybe.Maybe GHC.Types.Int) ->
                 let {
                   f5 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ GHC.Types.Int
                       GHC.Show.$fShowInt
                       Main.$fShowExposition2
                       ww1
                 } in
                 let {
                   f6 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.$fShowMaybe_$cshowsPrec
                       @ GHC.Types.Int
                       GHC.Show.$fShowInt
                       Main.$fShowExposition2
                       ww2
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> \ (x1 :: GHC.Base.String) ->
                      GHC.CString.unpackAppendCString#
                        Main.$fShowSize4
                        (GHC.CString.unpackAppendCString#
                           Main.$fShowSize3
                           (f5
                              (GHC.Base.++
                                 @ GHC.Types.Char
                                 GHC.Show.showCommaSpace1
                                 (GHC.CString.unpackAppendCString#
                                    Main.$fShowSize2
                                    (f6
                                       (GHC.CString.unpackAppendCString#
                                          Main.$fShowPosition2
                                          x1))))))
                   1#
                   -> \ (x1 :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Main.$fShowSize4
                           (GHC.CString.unpackAppendCString#
                              Main.$fShowSize3
                              (f5
                                 (GHC.Base.++
                                    @ GHC.Types.Char
                                    GHC.Show.showCommaSpace1
                                    (GHC.CString.unpackAppendCString#
                                       Main.$fShowSize2
                                       (f6
                                          (GHC.CString.unpackAppendCString#
                                             Main.$fShowPosition2
                                             (GHC.Types.:
                                                @ GHC.Types.Char
                                                GHC.Show.$fShow(,)2
                                                x1)))))))) }) -}
561af1a136195d9bf53457cd6693d411
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> Data.Text.Internal.Text
    -> Main.Position
    -> Main.Size
    -> Main.ToolContent
    -> GHC.Show.ShowS
  {- Arity: 5,
     Strictness: <S,U><L,U(U,U,U)><L,1*U(1*U,1*U)><L,1*U(1*U,1*U)><L,U(U(U,U,U))>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Data.Text.Internal.Text)
                   (ww2 :: Main.Position)
                   (ww3 :: Main.Size)
                   (ww4 :: Main.ToolContent) ->
                 let {
                   f5 :: GHC.Base.String -> GHC.Base.String
                   = case ww2 of ww5 { Main.Position ww6 ww7 ->
                     Main.$w$cshowsPrec1 0# ww6 ww7 }
                 } in
                 let {
                   f6 :: GHC.Base.String -> GHC.Base.String
                   = case ww3 of ww5 { Main.Size ww6 ww7 ->
                     Main.$w$cshowsPrec2 0# ww6 ww7 }
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x1 :: GHC.Base.String) ->
                     GHC.CString.unpackAppendCString#
                       Main.$fShowTool7
                       (GHC.CString.unpackAppendCString#
                          Main.$fShowTool6
                          (case Data.Text.Show.$w$cshowsPrec
                                  ww1
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     GHC.Show.showCommaSpace1
                                     (GHC.CString.unpackAppendCString#
                                        Main.$fShowTool5
                                        (f5
                                           (GHC.Base.++
                                              @ GHC.Types.Char
                                              GHC.Show.showCommaSpace1
                                              (GHC.CString.unpackAppendCString#
                                                 Main.$fShowTool4
                                                 (f6
                                                    (GHC.Base.++
                                                       @ GHC.Types.Char
                                                       GHC.Show.showCommaSpace1
                                                       (GHC.CString.unpackAppendCString#
                                                          Main.$fShowTool3
                                                          (case ww4 of ww5 { Main.TextContent ww6 ->
                                                           Main.$w$cshowsPrec4
                                                             0#
                                                             ww6
                                                             (GHC.CString.unpackAppendCString#
                                                                Main.$fShowPosition2
                                                                x1) }))))))))) of ww5 { (#,#) ww6 ww7 ->
                           GHC.Types.: @ GHC.Types.Char ww6 ww7 }))
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p
                   1#
                   -> \ (x1 :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x1)) }) -}
86224b673069690f63084ea3d72a44a6
  $w$cshowsPrec4 ::
    GHC.Prim.Int#
    -> Data.Text.Internal.Text -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U(U,U,U)><L,U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Data.Text.Internal.Text)
                   (w :: GHC.Base.String) ->
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> GHC.CString.unpackAppendCString#
                        Main.$fShowTool2
                        (case Data.Text.Show.$w$cshowsPrec ww1 w of ww2 { (#,#) ww3 ww4 ->
                         GHC.Types.: @ GHC.Types.Char ww3 ww4 })
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Main.$fShowTool2
                           (case Data.Text.Show.$w$cshowsPrec
                                   ww1
                                   (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.$fShow(,)2
                                      w) of ww2 { (#,#) ww3 ww4 ->
                            GHC.Types.: @ GHC.Types.Char ww3 ww4 })) }) -}
b848f6afcb081f8addab67bb0fc40121
  $w$ctoJSON ::
    Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> [Main.Tool]
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: Data.Text.Internal.Text)
                   (ww1 :: Data.Text.Internal.Text)
                   (ww2 :: Data.Text.Internal.Text)
                   (ww3 :: [Main.Tool]) ->
                 case Data.Aeson.Types.ToJSON.$fFromPairsValueDList_go
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (Main.$fToJSONExposition45, Data.Aeson.Types.Internal.$WString ww)
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (Main.$fToJSONExposition41, Data.Aeson.Types.Internal.$WString ww1)
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Main.$fToJSONExposition37, Data.Aeson.Types.Internal.$WString ww2)
                                 (GHC.Types.:
                                    @ Data.Aeson.Types.Internal.Pair
                                    (Main.$fToJSONExposition33,
                                     case GHC.Magic.runRW#
                                            @ ('GHC.Types.TupleRep
                                                 '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                            @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                 Data.Vector.Vector
                                                   Data.Aeson.Types.Internal.Value #)
                                            (\ (s1 :: GHC.Prim.State#
                                                        GHC.Prim.RealWorld)[OneShot] ->
                                             case GHC.Prim.newArray#
                                                    @ Data.Aeson.Types.Internal.Value
                                                    @ (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                    0#
                                                    (Data.Vector.Mutable.uninitialised
                                                       @ Data.Aeson.Types.Internal.Value)
                                                    s1
                                                      `cast`
                                                    (GHC.Prim.State#
                                                       (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                 (Nth:0
                                                                      (Nth:2
                                                                           (<GHC.Prim.State#
                                                                               GHC.Prim.RealWorld>_R
                                                                            ->_R ((#,#)
                                                                                    <'GHC.Types.TupleRep
                                                                                       '[]>_R
                                                                                    <'GHC.Types.LiftedRep>_R
                                                                                    <GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld>_R
                                                                                    (Data.Vector.Generic.Base.Mutable
                                                                                       <Data.Vector.Vector>_N
                                                                                       (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                                            <GHC.Prim.RealWorld>_N)
                                                                                       <Data.Aeson.Types.Internal.Value>_N)_R)_R))))))_R of ds1 { (#,#) ipv ipv1 ->
                                             Main.$wfoldlM_loop
                                               GHC.Types.SPEC
                                               0#
                                               0#
                                               ipv1
                                                 `cast`
                                               (GHC.Prim.MutableArray#
                                                  (Nth:0
                                                       (Nth:3
                                                            (Nth:3
                                                                 (<GHC.Prim.State#
                                                                     GHC.Prim.RealWorld>_R
                                                                  ->_R ((#,#)
                                                                          <'GHC.Types.TupleRep
                                                                             '[]>_R
                                                                          <'GHC.Types.LiftedRep>_R
                                                                          <GHC.Prim.State#
                                                                             GHC.Prim.RealWorld>_R
                                                                          (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                                           (GHC.ST.ST
                                                                                                                              GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N))_R)) ; Sub (Data.Vector.D:R:MutableVector[0]) (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                                                                                                                                                                                             <GHC.Prim.RealWorld>_N) <Data.Aeson.Types.Internal.Value>_N))
                                                  (Nth:1
                                                       (Nth:3
                                                            (Nth:3
                                                                 (<GHC.Prim.State#
                                                                     GHC.Prim.RealWorld>_R
                                                                  ->_R ((#,#)
                                                                          <'GHC.Types.TupleRep
                                                                             '[]>_R
                                                                          <'GHC.Types.LiftedRep>_R
                                                                          <GHC.Prim.State#
                                                                             GHC.Prim.RealWorld>_R
                                                                          (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                                           (GHC.ST.ST
                                                                                                                              GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N))_R)) ; Sub (Data.Vector.D:R:MutableVector[0]) (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                                                                                                                                                                                             <GHC.Prim.RealWorld>_N) <Data.Aeson.Types.Internal.Value>_N)))_R
                                               0#
                                               (GHC.Base.map
                                                  @ Main.Tool
                                                  @ Data.Aeson.Types.Internal.Value
                                                  Main.$fToJSONExposition_$ctoJSON1
                                                  ww3)
                                               ipv
                                                 `cast`
                                               (GHC.Prim.State#
                                                  (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                       (Nth:0
                                                            (Nth:2
                                                                 (Nth:3
                                                                      (<GHC.Prim.State#
                                                                          GHC.Prim.RealWorld>_R
                                                                       ->_R ((#,#)
                                                                               <'GHC.Types.TupleRep
                                                                                  '[]>_R
                                                                               <'GHC.Types.LiftedRep>_R
                                                                               <GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld>_R
                                                                               (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                                                (GHC.ST.ST
                                                                                                                                   GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N))_R))))))_R }) of ds1 { (#,#) ipv1 ipv2 ->
                                     case ipv2 of dt { Data.Vector.Vector ipv ipv4 ipv5 ->
                                     Data.Aeson.Types.Internal.Array dt } })
                                    (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of ww4 { Data.Aeson.Types.Internal.Object ww5 ->
                 (# ww5 #) }) -}
561af1a136195d9bf53457cd6693d411
  $w$ctoJSON1 ::
    Data.Text.Internal.Text
    -> Main.Position
    -> Main.Size
    -> Main.ToolContent
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 4,
     Strictness: <L,U><L,1*U(1*U,1*U)><L,1*U(1*U,1*U)><L,1*U(1*U(U,U,U))>,
     Inline: [2],
     Unfolding: (\ (ww :: Data.Text.Internal.Text)
                   (ww1 :: Main.Position)
                   (ww2 :: Main.Size)
                   (ww3 :: Main.ToolContent) ->
                 case Data.Aeson.Types.ToJSON.$fFromPairsValueDList_go
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (Main.$fToJSONExposition29, Data.Aeson.Types.Internal.$WString ww)
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (Main.$fToJSONExposition25, Main.$fToJSONExposition_$ctoJSON4 ww1)
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Main.$fToJSONExposition13, Main.$fToJSONExposition_$ctoJSON3 ww2)
                                 (GHC.Types.:
                                    @ Data.Aeson.Types.Internal.Pair
                                    (Main.$fToJSONExposition1,
                                     Main.$fToJSONExposition_$ctoJSON2 ww3)
                                    (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of ww4 { Data.Aeson.Types.Internal.Object ww5 ->
                 (# ww5 #) }) -}
4dd96d90002139cee543bd80b6d2b53a
  $w$ctoJSON2 ::
    GHC.Maybe.Maybe GHC.Types.Int
    -> GHC.Maybe.Maybe GHC.Types.Int
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 2, Strictness: <L,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Maybe.Maybe GHC.Types.Int)
                   (ww1 :: GHC.Maybe.Maybe GHC.Types.Int) ->
                 case Data.Aeson.Types.ToJSON.$fFromPairsValueDList_go
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (Main.$fToJSONExposition9,
                            case ww of wild {
                              GHC.Maybe.Nothing -> Data.Aeson.Types.Internal.Null
                              GHC.Maybe.Just a2
                              -> case a2 of wild1 { GHC.Types.I# i ->
                                 case GHC.Integer.Type.smallInteger i of dt { DEFAULT ->
                                 Data.Aeson.Types.Internal.Number
                                   (Data.Scientific.Scientific dt 0#) } } })
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (Main.$fToJSONExposition5,
                               case ww1 of wild {
                                 GHC.Maybe.Nothing -> Data.Aeson.Types.Internal.Null
                                 GHC.Maybe.Just a2
                                 -> case a2 of wild1 { GHC.Types.I# i ->
                                    case GHC.Integer.Type.smallInteger i of dt { DEFAULT ->
                                    Data.Aeson.Types.Internal.Number
                                      (Data.Scientific.Scientific dt 0#) } } })
                              (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of ww2 { Data.Aeson.Types.Internal.Object ww3 ->
                 (# ww3 #) }) -}
562efcc074f87c27f5357dda59b244b9
  $w$ctoJSON3 ::
    GHC.Maybe.Maybe GHC.Types.Int
    -> GHC.Maybe.Maybe GHC.Types.Int
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 2, Strictness: <L,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Maybe.Maybe GHC.Types.Int)
                   (ww1 :: GHC.Maybe.Maybe GHC.Types.Int) ->
                 case Data.Aeson.Types.ToJSON.$fFromPairsValueDList_go
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (Main.$fToJSONExposition21,
                            case ww of wild {
                              GHC.Maybe.Nothing -> Data.Aeson.Types.Internal.Null
                              GHC.Maybe.Just a2
                              -> case a2 of wild1 { GHC.Types.I# i ->
                                 case GHC.Integer.Type.smallInteger i of dt { DEFAULT ->
                                 Data.Aeson.Types.Internal.Number
                                   (Data.Scientific.Scientific dt 0#) } } })
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (Main.$fToJSONExposition17,
                               case ww1 of wild {
                                 GHC.Maybe.Nothing -> Data.Aeson.Types.Internal.Null
                                 GHC.Maybe.Just a2
                                 -> case a2 of wild1 { GHC.Types.I# i ->
                                    case GHC.Integer.Type.smallInteger i of dt { DEFAULT ->
                                    Data.Aeson.Types.Internal.Number
                                      (Data.Scientific.Scientific dt 0#) } } })
                              (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of ww2 { Data.Aeson.Types.Internal.Object ww3 ->
                 (# ww3 #) }) -}
66c67fd4688c9266118db40f8968c5d6
  $wfoldlM_loop ::
    GHC.Types.SPEC
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray#
         GHC.Prim.RealWorld Data.Aeson.Types.Internal.Value
    -> GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Data.Aeson.Types.Internal.Value #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><S,U><L,U><S,1*U><S,U>,
     Inline: [2] -}
3002976258b0b718bec887383ccef812
  $wpoly_go13 ::
    Data.Text.Internal.Text
    -> GHC.Maybe.Maybe Data.Text.Internal.Text
    -> Data.Map.Internal.Map Data.XML.Types.Name a
    -> GHC.Maybe.Maybe a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U(U,U,U)><L,U><S,1*U>,
     Inline: [2] -}
b52c6098c45a6ade437a5258d79a2a98
  data Exposition
    = Exposition {title :: Data.Text.Internal.Text,
                  author :: Data.Text.Internal.Text,
                  date :: Data.Text.Internal.Text,
                  tools :: [Main.Tool]}
561af1a136195d9bf53457cd6693d411
  data Position
    = Position {left :: GHC.Maybe.Maybe GHC.Types.Int,
                top :: GHC.Maybe.Maybe GHC.Types.Int}
b52c6098c45a6ade437a5258d79a2a98
  axiom Main.Rep_Exposition::
      GHC.Generics.Rep Main.Exposition
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Exposition" "Main" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Exposition" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Maybe.Just "title")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 Data.Text.Internal.Text)
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "author")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 Data.Text.Internal.Text))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "date")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Maybe.Just "tools")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 [Main.Tool]))))
561af1a136195d9bf53457cd6693d411
  axiom Main.Rep_Position::
      GHC.Generics.Rep Main.Position
        = GHC.Generics.D1
            ('GHC.Generics.MetaData "Position" "Main" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Position" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Maybe.Just "left")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 (GHC.Maybe.Maybe GHC.Types.Int))
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "top")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (GHC.Maybe.Maybe GHC.Types.Int))))
8f46b23e3f0254dc8e7f73bf9e799411
  axiom Main.Rep_Size::
      GHC.Generics.Rep Main.Size
        = GHC.Generics.D1
            ('GHC.Generics.MetaData "Size" "Main" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Size" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Maybe.Just "width")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 (GHC.Maybe.Maybe GHC.Types.Int))
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "height")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 (GHC.Maybe.Maybe GHC.Types.Int))))
561af1a136195d9bf53457cd6693d411
  axiom Main.Rep_Tool::
      GHC.Generics.Rep Main.Tool
        = GHC.Generics.D1
            ('GHC.Generics.MetaData "Tool" "Main" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Tool" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Maybe.Just "id")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 Data.Text.Internal.Text)
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "position")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 Main.Position))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "size")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 Main.Size)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Maybe.Just "content")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 Main.ToolContent))))
b13e911416f3fb02afecb5ff88147ef6
  axiom Main.Rep_ToolContent::
      GHC.Generics.Rep Main.ToolContent
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "ToolContent" "Main" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "TextContent" 'GHC.Generics.PrefixI 'GHC.Types.False)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     'GHC.Maybe.Nothing
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 Data.Text.Internal.Text)))
8f46b23e3f0254dc8e7f73bf9e799411
  data Size
    = Size {width :: GHC.Maybe.Maybe GHC.Types.Int,
            height :: GHC.Maybe.Maybe GHC.Types.Int}
561af1a136195d9bf53457cd6693d411
  data Tool
    = Tool {id :: Data.Text.Internal.Text,
            position :: Main.Position,
            size :: Main.Size,
            content :: Main.ToolContent}
b13e911416f3fb02afecb5ff88147ef6
  data ToolContent = TextContent Data.Text.Internal.Text
b52c6098c45a6ade437a5258d79a2a98
  author :: Main.Exposition -> Data.Text.Internal.Text
  RecSel Left Main.Exposition
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLL),1*U(A,1*U(U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Exposition) ->
                 case ds of wild { Main.Exposition ds1 ds2 ds3 ds4 -> ds2 }) -}
561af1a136195d9bf53457cd6693d411
  content :: Main.Tool -> Main.ToolContent
  RecSel Left Main.Tool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Tool) ->
                 case ds of wild { Main.Tool ds1 ds2 ds3 ds4 -> ds4 }) -}
b52c6098c45a6ade437a5258d79a2a98
  date :: Main.Exposition -> Data.Text.Internal.Text
  RecSel Left Main.Exposition
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSL),1*U(A,A,1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Exposition) ->
                 case ds of wild { Main.Exposition ds1 ds2 ds3 ds4 -> ds3 }) -}
8f46b23e3f0254dc8e7f73bf9e799411
  height :: Main.Size -> GHC.Maybe.Maybe GHC.Types.Int
  RecSel Left Main.Size
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Size) ->
                 case ds of wild { Main.Size ds1 ds2 -> ds2 }) -}
561af1a136195d9bf53457cd6693d411
  id :: Main.Tool -> Data.Text.Internal.Text
  RecSel Left Main.Tool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U(U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Tool) ->
                 case ds of wild { Main.Tool ds1 ds2 ds3 ds4 -> ds1 }) -}
561af1a136195d9bf53457cd6693d411
  left :: Main.Position -> GHC.Maybe.Maybe GHC.Types.Int
  RecSel Left Main.Position
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Position) ->
                 case ds of wild { Main.Position ds1 ds2 -> ds1 }) -}
b4f9ae97a091b232a88173a93240314d
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
529073e95d7e97cca9b9c5c633464b51
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
3bd27e11144b62cbd3a7a1ae2df73fdc
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
561af1a136195d9bf53457cd6693d411
  position :: Main.Tool -> Main.Position
  RecSel Left Main.Tool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLL),1*U(A,1*U(U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Tool) ->
                 case ds of wild { Main.Tool ds1 ds2 ds3 ds4 -> ds2 }) -}
561af1a136195d9bf53457cd6693d411
  size :: Main.Tool -> Main.Size
  RecSel Left Main.Tool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSL),1*U(A,A,1*U(U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Tool) ->
                 case ds of wild { Main.Tool ds1 ds2 ds3 ds4 -> ds3 }) -}
b52c6098c45a6ade437a5258d79a2a98
  title :: Main.Exposition -> Data.Text.Internal.Text
  RecSel Left Main.Exposition
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U(U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Exposition) ->
                 case ds of wild { Main.Exposition ds1 ds2 ds3 ds4 -> ds1 }) -}
b52c6098c45a6ade437a5258d79a2a98
  tools :: Main.Exposition -> [Main.Tool]
  RecSel Left Main.Exposition
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Exposition) ->
                 case ds of wild { Main.Exposition ds1 ds2 ds3 ds4 -> ds4 }) -}
561af1a136195d9bf53457cd6693d411
  top :: Main.Position -> GHC.Maybe.Maybe GHC.Types.Int
  RecSel Left Main.Position
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Position) ->
                 case ds of wild { Main.Position ds1 ds2 -> ds2 }) -}
8f46b23e3f0254dc8e7f73bf9e799411
  width :: Main.Size -> GHC.Maybe.Maybe GHC.Types.Int
  RecSel Left Main.Size
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Size) ->
                 case ds of wild { Main.Size ds1 ds2 -> ds1 }) -}
instance GHC.Generics.Generic [Main.Exposition]
  = Main.$fGenericExposition
instance GHC.Generics.Generic [Main.Position]
  = Main.$fGenericPosition
instance GHC.Generics.Generic [Main.Size] = Main.$fGenericSize
instance GHC.Generics.Generic [Main.Tool] = Main.$fGenericTool
instance GHC.Generics.Generic [Main.ToolContent]
  = Main.$fGenericToolContent
instance GHC.Show.Show [Main.Exposition] = Main.$fShowExposition
instance GHC.Show.Show [Main.Position] = Main.$fShowPosition
instance GHC.Show.Show [Main.Size] = Main.$fShowSize
instance GHC.Show.Show [Main.Tool] = Main.$fShowTool
instance GHC.Show.Show [Main.ToolContent] = Main.$fShowToolContent
instance Data.Aeson.Types.ToJSON.ToJSON [Main.Exposition]
  = Main.$fToJSONExposition
instance Data.Aeson.Types.ToJSON.ToJSON [Main.Position]
  = Main.$fToJSONPosition
instance Data.Aeson.Types.ToJSON.ToJSON [Main.Size]
  = Main.$fToJSONSize
instance Data.Aeson.Types.ToJSON.ToJSON [Main.Tool]
  = Main.$fToJSONTool
instance Data.Aeson.Types.ToJSON.ToJSON [Main.ToolContent]
  = Main.$fToJSONToolContent
family instance GHC.Generics.Rep [Main.Exposition]
  = Main.Rep_Exposition
family instance GHC.Generics.Rep [Main.Tool] = Main.Rep_Tool
family instance GHC.Generics.Rep [Main.ToolContent]
  = Main.Rep_ToolContent
family instance GHC.Generics.Rep [Main.Size] = Main.Rep_Size
family instance GHC.Generics.Rep [Main.Position]
  = Main.Rep_Position
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

